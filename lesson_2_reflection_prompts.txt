5. Reflect: Initializing a Repository
What happens when you initialize a repository? Why do you need to do it?

Quando si inizializza un repository viene creata la cartella nascosta .git, visibile con il comando ls -a, che contiene i file e le cartelle per la gestione del repository. Non ci sono commit quando viene creato un repository.

8. Reflect: Staging Area
How is the staging area different from the working directory and the repository? What value do you think it offers?

La staging area contiene i files che necessitano di un commit, è un'area di parcheggio temporaneo dei files tra working directory e repository. Tramite il comando git add è possibile parcheggiare in staging area i files, uno per volta, per poi fare archiviarli tutti con un solo commit nel repository. E' utile in quanto permette di organizzare meglio i commit. Tramite il comando git status è possibile verificare quali files sono presenti nella staging area. 

13. Reflect: Commit Size
How can you use the staging area to make sure you have one commit per logical change?

Bisogna aggiungere all'area di staging un file alla volta e poi tramite un unico comando di commit vengono aggiornati nel repository tutti i files relativi ad uno stesso intervento logico. 

16. Reflect: When to Use Branches
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Poter creare branches in un programma aiuta in diverse situazioni. Ad esempio se si vuole fare una modifica importante al programma, come ad esempio introdurre una nuova funzione che richiede del tempo per essere realizzata. Nel frattempo, se viene segnalato un bug al programma, rimane possibile correggerlo nel branch master, e continuare tranquillamente le nuove implementazioni nel branch secondario. 